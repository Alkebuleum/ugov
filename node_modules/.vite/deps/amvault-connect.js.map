{
  "version": 3,
  "sources": ["../../amvault-connect/dist/provider/AuthProvider.js", "../../amvault-connect/dist/popup/amvaultPopup.js", "../../amvault-connect/dist/popup/amvaultProvider.js", "../../amvault-connect/dist/provider/useAuth.js", "../../amvault-connect/dist/evm.js"],
  "sourcesContent": ["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useEffect, useMemo, useState } from 'react';\nimport { verifyMessage } from 'ethers';\nimport { openSignin } from '../popup/amvaultProvider';\nconst DEFAULT_TTL = 24 * 60 * 60 * 1000;\nexport const makeStorageKeys = (prefix) => ({\n    session: `${prefix}.session`,\n    nonce: `${prefix}.nonce`\n});\nexport const AuthContext = createContext({\n    session: null, signin: async () => { }, signout: () => { }, status: 'idle', error: null\n});\nexport function AuthProvider({ children, config }) {\n    var _a;\n    const ttl = (_a = config.sessionTtlMs) !== null && _a !== void 0 ? _a : DEFAULT_TTL;\n    const keys = useMemo(() => makeStorageKeys(config.storagePrefix || 'amvault'), [config.storagePrefix]);\n    const [session, setSession] = useState(null);\n    const [status, setStatus] = useState('idle');\n    const [error, setError] = useState(null);\n    // restore\n    useEffect(() => {\n        setStatus('checking');\n        try {\n            const raw = localStorage.getItem(keys.session);\n            if (raw) {\n                const s = JSON.parse(raw);\n                if (Date.now() < s.expiresAt) {\n                    setSession(s);\n                    setStatus('ready');\n                    return;\n                }\n            }\n            setStatus('ready');\n        }\n        catch (e) {\n            setStatus('failed');\n            setError('Failed to load session');\n        }\n    }, [keys.session]);\n    const signout = () => {\n        localStorage.removeItem(keys.session);\n        setSession(null);\n    };\n    const makeNonce = () => {\n        const b = new Uint8Array(16);\n        crypto.getRandomValues(b);\n        return Array.from(b).map(x => x.toString(16).padStart(2, '0')).join('');\n    };\n    const buildMessage = (nonce) => {\n        const origin = window.location.origin;\n        if (typeof config.messageBuilder === 'function') {\n            return config.messageBuilder({\n                appName: config.appName,\n                origin,\n                chainId: config.chainId,\n                nonce\n            });\n        }\n        const domain = window.location.host;\n        return [\n            `${domain} wants you to sign in with your account:`,\n            ``,\n            `App: ${config.appName}`,\n            `Nonce: ${nonce}`,\n            `URI: ${origin}`,\n            `Chain ID: ${config.chainId}`,\n            `Version: 1`,\n        ].join('\\\\n');\n    };\n    const signin = async () => {\n        var _a, _b, _c;\n        try {\n            setError(null);\n            setStatus('checking');\n            const nonce = makeNonce();\n            localStorage.setItem(keys.nonce, nonce);\n            const msg = buildMessage(nonce);\n            const resp = await openSignin({\n                app: config.appName,\n                chainId: config.chainId,\n                origin: window.location.origin,\n                nonce,\n                amvaultUrl: config.amvaultUrl,\n                debug: !!config.debug,\n                message: msg\n            });\n            if (!(resp === null || resp === void 0 ? void 0 : resp.ok))\n                throw new Error((resp === null || resp === void 0 ? void 0 : resp.error) || 'Sign-in rejected');\n            const { address, signature, chainId, nonce: got } = resp;\n            if (!address || !signature || !chainId || !got)\n                throw new Error('Malformed response');\n            if (got !== nonce)\n                throw new Error('Nonce mismatch');\n            if (Number(chainId) !== config.chainId)\n                throw new Error(`Wrong network: got ${chainId}, expected ${config.chainId}`);\n            // If AmVault returns the exact message it showed the user, verify against that,\n            // then sanity-check fields (nonce/origin/chainId/app).\n            const origin = window.location.origin;\n            const toVerify = typeof resp.message === 'string' && resp.message.trim() ? resp.message : msg;\n            const recovered = verifyMessage(toVerify, signature).toLowerCase();\n            if (recovered !== String(address).toLowerCase())\n                throw new Error('Signature invalid (recovered != address)');\n            // Sanity checks if using returned message\n            if (toVerify !== msg) {\n                if (!toVerify.includes(`Nonce: ${nonce}`))\n                    throw new Error('Signed message missing expected nonce');\n                if (!toVerify.includes(`URI: ${origin}`))\n                    throw new Error('Signed message missing expected origin');\n                if (!toVerify.includes(`Chain ID: ${config.chainId}`))\n                    throw new Error('Signed message missing expected chain id');\n                const enforce = (_a = config.enforceAppName) !== null && _a !== void 0 ? _a : true;\n                if (enforce && !toVerify.includes(`App: ${config.appName}`)) {\n                    throw new Error('Signed message app does not match configuration');\n                }\n            }\n            // Optional registry checks\n            if ((_b = config.registry) === null || _b === void 0 ? void 0 : _b.isRegistered) {\n                const ok = await config.registry.isRegistered(address);\n                if (!ok)\n                    throw new Error('Address not registered');\n            }\n            // Resolve AIN\n            let ain = '';\n            if (typeof resp.ain === 'string' && resp.ain.trim())\n                ain = resp.ain.trim();\n            else if (typeof resp.amid === 'string' && resp.amid.trim())\n                ain = resp.amid.trim();\n            if (!ain && ((_c = config.registry) === null || _c === void 0 ? void 0 : _c.getAin)) {\n                try {\n                    const gotAin = await config.registry.getAin(address);\n                    if (gotAin)\n                        ain = gotAin;\n                }\n                catch { }\n            }\n            if (!ain)\n                ain = `ain-${address.slice(2, 8)}`;\n            const now = Date.now();\n            const sess = { ain, address, issuedAt: now, expiresAt: now + ttl };\n            localStorage.setItem(keys.session, JSON.stringify(sess));\n            setSession(sess);\n            setStatus('ready');\n        }\n        catch (e) {\n            setError((e === null || e === void 0 ? void 0 : e.message) || 'Sign-in failed');\n            setStatus('ready');\n        }\n        finally {\n            localStorage.removeItem(keys.nonce);\n        }\n    };\n    const value = useMemo(() => ({\n        session, signin, signout, status, error\n    }), [session, status, error]);\n    return _jsx(AuthContext.Provider, { value: value, children: children });\n}\n", "let sharedPopup = null;\nlet overlayEl = null;\nlet isClosing = false;\nfunction ensureOverlay() {\n    if (overlayEl)\n        return;\n    overlayEl = document.createElement('div');\n    overlayEl.id = 'amvault-overlay';\n    Object.assign(overlayEl.style, {\n        position: 'fixed',\n        inset: '0',\n        background: 'rgba(0,0,0,0.35)',\n        zIndex: '9999',\n        pointerEvents: 'none'\n    });\n    document.body.appendChild(overlayEl);\n}\nexport function preOpenAmvaultPopup(name = 'amvault', w = 420, h = 640) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const oh = (_c = (_b = (_a = window.top) === null || _a === void 0 ? void 0 : _a.outerHeight) !== null && _b !== void 0 ? _b : window.outerHeight) !== null && _c !== void 0 ? _c : 0;\n    const ow = (_f = (_e = (_d = window.top) === null || _d === void 0 ? void 0 : _d.outerWidth) !== null && _e !== void 0 ? _e : window.outerWidth) !== null && _f !== void 0 ? _f : 0;\n    const y = Math.max((oh - h) / 2, 0);\n    const x = Math.max((ow - w) / 2, 0);\n    if (sharedPopup && !sharedPopup.closed)\n        return sharedPopup;\n    sharedPopup = (_g = window.open('about:blank', name, `toolbar=0,location=0,status=0,menubar=0,scrollbars=1,resizable=1,width=${w},height=${h},top=${y},left=${x}`)) !== null && _g !== void 0 ? _g : null;\n    ensureOverlay();\n    window.addEventListener('beforeunload', () => {\n        try {\n            sharedPopup === null || sharedPopup === void 0 ? void 0 : sharedPopup.close();\n        }\n        catch { }\n        sharedPopup = null;\n        if ((overlayEl === null || overlayEl === void 0 ? void 0 : overlayEl.parentNode) && overlayEl.parentNode.contains(overlayEl)) {\n            try {\n                overlayEl.parentNode.removeChild(overlayEl);\n            }\n            catch { }\n        }\n        overlayEl = null;\n        isClosing = false;\n    }, { once: true });\n    return sharedPopup;\n}\nexport function getSharedPopup() {\n    return sharedPopup && !sharedPopup.closed ? sharedPopup : null;\n}\nexport async function closeSharedPopup() {\n    if (isClosing)\n        return;\n    isClosing = true;\n    try {\n        if (sharedPopup && !sharedPopup.closed)\n            sharedPopup.close();\n    }\n    catch { }\n    sharedPopup = null;\n    if (overlayEl) {\n        const parent = overlayEl.parentNode;\n        if (parent && parent.contains(overlayEl)) {\n            try {\n                parent.removeChild(overlayEl);\n            }\n            catch { }\n        }\n    }\n    overlayEl = null;\n    await Promise.resolve();\n    isClosing = false;\n}\nexport async function closePopupThen(cb) {\n    await closeSharedPopup();\n    setTimeout(cb, 0);\n}\n", "import { preOpenAmvaultPopup, closeSharedPopup } from './amvaultPopup';\nconst STORAGE_FALLBACK_KEYS = ['amid:lastResult', 'amvault:payload'];\nfunction base64url(json) {\n    const s = btoa(unescape(encodeURIComponent(JSON.stringify(json))))\n        .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n    return s;\n}\nfunction makeNonce() {\n    const b = new Uint8Array(16);\n    crypto.getRandomValues(b);\n    return Array.from(b).map(x => x.toString(16).padStart(2, '0')).join('');\n}\nfunction requestPopup({ method, app, chainId, origin, amvaultUrl, payload, nonce = makeNonce(), timeoutMs = 120000, debug = false }) {\n    return new Promise((resolve, reject) => {\n        try {\n            const url = new URL(amvaultUrl);\n            url.searchParams.set('method', method);\n            url.searchParams.set('app', app);\n            url.searchParams.set('chainId', String(chainId));\n            url.searchParams.set('origin', origin);\n            url.searchParams.set('nonce', nonce);\n            url.searchParams.set('redirect', 'postmessage');\n            if (payload)\n                url.searchParams.set('payload', base64url(payload));\n            const popup = preOpenAmvaultPopup();\n            if (!popup)\n                return reject(new Error('Popup blocked'));\n            try {\n                popup.location.href = url.toString();\n            }\n            catch {\n                popup.location.assign(url.toString());\n            }\n            let settled = false;\n            let timer;\n            const amvaultOrigin = url.origin;\n            const cleanup = () => {\n                if (timer)\n                    window.clearTimeout(timer);\n                window.removeEventListener('message', onMsg);\n                window.removeEventListener('storage', onStorage);\n                try {\n                    closeSharedPopup();\n                }\n                catch { }\n            };\n            const finishOk = (data) => { if (settled)\n                return; settled = true; cleanup(); resolve(data); };\n            const finishErr = (err) => { if (settled)\n                return; settled = true; cleanup(); reject(err instanceof Error ? err : new Error(String(err))); };\n            const onMsg = (ev) => {\n                if (amvaultOrigin && ev.origin !== amvaultOrigin)\n                    return;\n                if (ev.source !== popup)\n                    return;\n                const data = ev.data;\n                if (!data)\n                    return;\n                if (debug)\n                    console.log('[amvault][pm]', data);\n                if (method === 'signin' && data.type === 'amvault:auth')\n                    return finishOk(data);\n                if (method === 'eth_sendTransaction' && data.type === 'amvault:tx')\n                    return finishOk(data);\n                if (data.type === 'amvault:error')\n                    return finishErr(new Error(data.error || 'Request rejected'));\n            };\n            window.addEventListener('message', onMsg);\n            const onStorage = (ev) => {\n                if (!ev.key || !STORAGE_FALLBACK_KEYS.includes(ev.key))\n                    return;\n                if (!ev.newValue)\n                    return;\n                try {\n                    const data = JSON.parse(ev.newValue);\n                    if (debug)\n                        console.log('[amvault][storage]', data);\n                    if (method === 'signin' && (data === null || data === void 0 ? void 0 : data.type) === 'amvault:auth')\n                        return finishOk(data);\n                    if (method === 'eth_sendTransaction' && (data === null || data === void 0 ? void 0 : data.type) === 'amvault:tx')\n                        return finishOk(data);\n                    if ((data === null || data === void 0 ? void 0 : data.type) === 'amvault:error')\n                        return finishErr(new Error(data.error || 'Request rejected'));\n                }\n                catch { }\n            };\n            window.addEventListener('storage', onStorage);\n            timer = window.setTimeout(() => finishErr(new Error('Timed out waiting for AmVault')), timeoutMs);\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\nexport async function openSignin(args) {\n    const payload = args.message ? { message: args.message } : undefined;\n    return requestPopup({\n        method: 'signin',\n        app: args.app, chainId: args.chainId, origin: args.origin,\n        amvaultUrl: args.amvaultUrl, nonce: args.nonce, debug: !!args.debug,\n        payload\n    });\n}\nexport async function sendTransaction(req, opts) {\n    var _a;\n    const origin = window.location.origin;\n    const payload = {\n        to: req.to, value: req.value, data: req.data, gas: req.gas,\n        maxFeePerGasGwei: req.maxFeePerGasGwei, maxPriorityFeePerGasGwei: req.maxPriorityFeePerGasGwei\n    };\n    const resp = await requestPopup({\n        method: 'eth_sendTransaction',\n        app: opts.app,\n        chainId: req.chainId,\n        origin,\n        amvaultUrl: opts.amvaultUrl,\n        payload,\n        timeoutMs: (_a = opts.timeoutMs) !== null && _a !== void 0 ? _a : 120000,\n        debug: !!opts.debug\n    });\n    if (!resp.ok)\n        throw new Error(resp.error || 'Transaction rejected');\n    if (!resp.txHash)\n        throw new Error('No txHash returned from AmVault');\n    return resp.txHash;\n}\n", "import { useContext } from 'react';\nimport { AuthContext } from './AuthProvider';\nexport function useAuth() { return useContext(AuthContext); }\n", "export const EVM = {\n    CHAIN_ID: 0,\n};\n/** Optional helper */\nexport function setChainId(chainId) { EVM.CHAIN_ID = chainId; }\n"],
  "mappings": "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",
  "names": ["makeNonce", "_a", "_jsx", "import_react"]
}
